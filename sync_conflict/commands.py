import click
import os
from sync_conflict import utils


@click.group()
def cli():
    pass


@click.command()
@click.argument('path')
def find_conflict(path):
    # verify path input by user
    utils.check_folder_exist(path)

    """ Find conflict file generated by syncthing """
    click.echo('Indexing files...')

    # get all files path
    files = utils.index_all_files(path)
    click.echo(str(len(files)) + ' files indexed')

    # display all conflict file
    conflicted_files = utils.get_sync_conflict_files(files)
    if len(conflicted_files) > 0:
        for file in conflicted_files:
            click.echo(file)

    # display total number of conflict file
    click.echo(str(len(conflicted_files)) + ' conflict file')


@click.command()
@click.argument('path')
def resolve(path):
    # verify path input by user
    utils.check_folder_exist(path)

    """ Automatically resolve conflict between file """
    click.echo('Resolve files')

    # get all files path
    files = utils.index_all_files(path)
    click.echo(str(len(files)) + ' files indexed')

    # get all conflict file
    conflicted_files = utils.get_sync_conflict_files(files)

    # display all conflict file
    total_solved = 0
    if len(conflicted_files) > 0:
        for file in conflicted_files:
            if utils.resolve_conflict(file):
                total_solved += 1
    click.echo(f'{total_solved}/{len(conflicted_files)} conflict solved.')

    # display total number of conflict file
    click.echo(str(len(conflicted_files)) + ' conflict')


cli.add_command(find_conflict)
cli.add_command(resolve)
